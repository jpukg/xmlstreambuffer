<project name="StreamBufferPackage" default="dist" basedir=".">

    
    <property name="streambuffer.dir" value="streambuffer"/>
    
    <property name="package.dir"  value="package" />

    <property file="${user.home}/build.properties" />

    <property file="${basedir}/${streambuffer.dir}/build.properties" />

    <target name="prepare">
            <tstamp>
                <format property="TSTAMP" pattern="hhmmss"/>
            </tstamp>
            <mkdir dir="${package.dir}"/>
    </target>
    
    <target name="clean">
        <ant antfile="build-without-nb.xml" dir="${streambuffer.dir}" target="clean"/>
    </target>
    
    <target name="dist">
        <ant antfile="build-without-nb.xml" dir="${streambuffer.dir}" target="doc"/>
    </target>
    
    <target name="test">
        <ant antfile="build-without-nb.xml" dir="${streambuffer.dir}" target="test"/>
    </target>
    
    <target name="source-package" depends="dist, prepare">
        <zip destfile="${package.dir}/${ant.project.name}_src_${release.impl.version}_${DSTAMP}_${TSTAMP}.zip">
            <fileset dir=".">
                <include name="${streambuffer.dir}/**"/>
            </fileset>                
        </zip>    
	<zip destfile="${package.dir}/streambuffer.src.zip">
	    <fileset dir="${streambuffer.dir}/src">
		<include name="**"/>
	    </fileset>                
	</zip>
    </target>
    
    <target name="dist-package" depends="dist, prepare">
	<mkdir dir="${package.dir}/${streambuffer.dir}.${release.impl.version}"/>
	<copy todir="${package.dir}/${streambuffer.dir}.${release.impl.version}">
            <fileset dir="${streambuffer.dir}/dist">
                <include name="javadoc/**"/>
            </fileset>
            <fileset dir="${streambuffer.dir}">
                <include name="lib/*.jar"/>
                <include name="dist/streambuffer.jar"/>
            </fileset>
            <fileset dir="${basedir}">
                <include name="license.txt"/>
            </fileset>
	</copy>
        <zip destfile="${package.dir}/${ant.project.name}_dist_${release.impl.version}_${DSTAMP}_${TSTAMP}.zip">
            <fileset dir="${package.dir}">
                <include name="${streambuffer.dir}.${release.impl.version}/**/*"/>
            </fileset>
	</zip>
	<delete dir="${package.dir}/${streambuffer.dir}.${release.impl.version}"/>
    </target>

    <target name="package" depends="source-package, dist-package">
    </target>
    
    <target name="push-to-maven-prepare" 
        description="prepare a repository iamge for the push-to-maven target. Run after package">
        <taskdef resource="maven-repository-importer.properties">
            <classpath>
                <pathelement path="tools/lib/maven-repository-importer.jar" />
            </classpath>
        </taskdef>
        <delete dir="build/maven-repo" /><!-- clean it -->
        <!-- ${suffix} can be overridden to "" for posting releases -->
        <property name="suffix" value="-SNAPSHOT" />
        <maven-repository-importer
            destdir="build/maven-repo" version="${release.impl.version}">
            <artifact
                jar="${streambuffer.dir}/dist/streambuffer.jar"
                srczip="package/streambuffer.src.zip"
                pom="etc/poms/streambuffer.pom" />
        </maven-repository-importer>
    </target>

    <macrodef name="cvs-import">
        <attribute name="src"/>
        <attribute name="dest"/>
        <attribute name="cvsroot"/>
        <sequential>
            <tstamp />
            <echo>importing to CVS...</echo>
            <cvs dest="@{src}" failonerror="true">
                <commandline>
                    <argument value="-d@{cvsroot}"/>
                    <argument line="-z9 import -ko"/>
                    <argument value="-W"/>
                    <argument line="*.jar -kb"/>
                    <argument value="-m"/>
                    <argument value="deploying new jars to the java.net maven repository"/>
          
                    <argument value="@{dest}"/>
                    <argument line="deployment-to-maven-repository t${DSTAMP}${TSTAMP}" />
                </commandline>
            </cvs>
        </sequential>
    </macrodef>
  
    <target name="push-to-maven" depends="push-to-maven-prepare"
        description="publish artifacts into the maven repository">
        <echo>importing to CVS...</echo>
        <!--
        <cvs-import src="build/maven-repo" dest="fi/repo" cvsroot=":pserver:${user.name}@java-net-cvs:/cvs" />
        -->
        <cvs-import src="build/maven-repo" dest="xmlstreambuffer/repo" cvsroot=":pserver:${java.net.user.name}@cvs.dev.java.net:/cvs" />
    </target>

</project>
